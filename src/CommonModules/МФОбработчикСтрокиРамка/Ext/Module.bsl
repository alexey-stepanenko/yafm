//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2025 Alexey A. Stepanenko 
//    * alexey.stepanenko@gmail.com
//    * TG: @AlexeyStepanenko
//    * https://github.com/alexey-stepanenko
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

Функция Идентификаторы() Экспорт
	Идентификаторы = Новый Массив;
	Идентификаторы.Добавить("РАМКА");
	
	Возврат Идентификаторы;
КонецФункции

// Обработчик строки, описывающий рамку
//
// Параметры:
//  ОписаниеМодификаций - Структура - См. подробнее МодификацияФормСлужебный.НовыйОписаниеМодификаций()
//  Поля - Массив - значения полей из строки описания модификации формы. Ожидается минимум 3 элемента массива:
//    * [0] - Идентификатор строки. Может содержать значения из массива, возвращаемого функцией Идентификаторы().
//    * [1] - Имя рамки.
//    * [2] - Тип рамки:
//            * БезРамки, WithoutBorder
//            * Вдавленная, Indented
//            * Выпуклая, Embossed
//            * Двойная, Double
//            * ДвойноеПодчеркивание, DoubleUnderline
//            * Одинарная, Single
//            * Подчеркивание, Underline
//            * Скругленная, Rounded
//            * ЧертаСверху, Overline
//    * [3] - Толщина рамки. Максимальное значение: 5
//
// Пример строки:
// РАМКА	Обычная	двойНАЯ	3
//
Процедура Обработать(ОписаниеМодификаций, Поля) Экспорт
	МинимальноеКоличествоПолей = 4;
	КоличествоПолей = Поля.Количество();
	МФОбработкаСтрокСлужебный.ПроверитьКоличествоПолейСтроки(КоличествоПолей, МинимальноеКоличествоПолей);
	
	СоставПолейСтроки = МФОбработкаСтрокСлужебный.СоставПолейСтроки(
		Поля, 
		"Имя,ТипРамки,ТолщинаРамки"
	);
	
	ТипРамки = МФСтандартныеПеречисленияСлужебный
		.Значения()
		.Получить(Тип("ТипРамкиЭлементаУправления"))
		.Получить(СоставПолейСтроки.ТипРамки)
	;
	
	Если ТипРамки = Неопределено Тогда
		// BSLLS:NestedFunctionInParameters-off
		ТекстИсключения = СтрШаблон(
			НСтр("ru='Неизвестный тип рамки: ""%1""'"),
			СоставПолейСтроки.ТипРамки
		);
		// BSLLS:NestedFunctionInParameters-on
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ТипНатуральноеЧисло = МФПовтИсп.ТипНатуральноеЧисло();
	ТолщинаРамки = ТипНатуральноеЧисло.ПривестиЗначение(СоставПолейСтроки.ТолщинаРамки);
	
	Значение = Новый Рамка(ТипРамки, ТолщинаРамки); // BSLLS:StyleElementConstructors-off
	
	Описание = Новый Структура;
	Описание.Вставить("Имя", СоставПолейСтроки.Имя);
	Описание.Вставить("Значение", Значение);
	ОписаниеМодификаций.Рамки.Вставить(
		СоставПолейСтроки.Идентификатор,
		Описание
	);
КонецПроцедуры

#КонецОбласти
