//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2025 Alexey A. Stepanenko 
//    * alexey.stepanenko@gmail.com
//    * TG: @AlexeyStepanenko
//    * https://github.com/alexey-stepanenko
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция МакетОписанияМодификаций(ИмяФормы, ИмяМакетаОписанияМодификаций) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Новый ТекстовыйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МФМакеты.Макет КАК Макет
	               |ИЗ
	               |	РегистрСведений.МФМакеты КАК МФМакеты
	               |ГДЕ
	               |	МФМакеты.ИмяФормы = &ИмяФормы
	               |	И МФМакеты.ИмяМакета = &ИмяМакета";
	Запрос.УстановитьПараметр("ИмяФормы", ИмяФормы);
	Запрос.УстановитьПараметр("ИмяМакета", ИмяМакетаОписанияМодификаций);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ТекстШаблона = ВыборкаДетальныеЗаписи.Макет.Получить();
		Результат.УстановитьТекст(ТекстШаблона);
	Иначе
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ИмяФормы.Установить(ИмяФормы);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.ИмяФормы = ИмяФормы;
		НоваяЗапись.ИмяМакета = ИмяМакетаОписанияМодификаций;
		НоваяЗапись.Макет = Новый ХранилищеЗначения("", Новый СжатиеДанных(9));
		
		НаборЗаписей.Записать();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
КонецФункции

#Область РежимОтбора

Функция РежимОтбораВсе() Экспорт
	Возврат "Все";
КонецФункции

Функция РежимОтбораАктуальныеФормы() Экспорт
	Возврат "АктуальныеФормы";
КонецФункции

Функция РежимОтбораФорма() Экспорт
	Возврат "Форма";
КонецФункции

#КонецОбласти

// TODO 2025-03-20: Сделать описание
Функция КэшФорм(ИменаРеквизитов, РежимОтбора, ДополнительныеДанные = Неопределено) Экспорт
	Результат = Новый Соответствие;
	
	Реквизиты = Реквизиты(ИменаРеквизитов);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаКэшФорм(Реквизиты, РежимОтбора);
	Если РежимОтбора = РежимОтбораФорма() Тогда
		Запрос.УстановитьПараметр("ИмяФормы", ДополнительныеДанные);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СвойстваФормы = Новый Структура;
		Для Каждого Элемент Из Реквизиты Цикл
			ИмяПоля = Элемент.Значение;
			СвойстваФормы.Вставить(ИмяПоля, ВыборкаДетальныеЗаписи[ИмяПоля]);
		КонецЦикла;
		
		Результат.Вставить(
			ВыборкаДетальныеЗаписи.ИмяФормы,
			СвойстваФормы
		);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Процедура ОбновитьМакетОписанияМодификаций(ИмяФормы, ИмяМакета, ТекстМакета) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = СоздатьМенеджерЗаписи();
	Сжатие = Новый СжатиеДанных(9);
	Запись.ИмяФормы = ИмяФормы;
	Запись.ИмяМакета = ИмяМакета;
	Запись.Макет = Новый ХранилищеЗначения(
		ТекстМакета,
		Сжатие
	);
	Запись.Записать();
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

Процедура ОбновитьМакетыОписанияМодификацийИзКонфигурации(МакетыКОбновлению) Экспорт
	Для Каждого Элемент Из МакетыКОбновлению Цикл
		МакетИзКонфигурации = Новый ТекстовыйДокумент;
		МакетСуществует = МФСлужебный.МакетОписанияМодификацийСуществует(Элемент.ИмяМакета, МакетИзКонфигурации);
		Если МакетСуществует Тогда
			РегистрыСведений.МФМакеты.ОбновитьМакетОписанияМодификаций(
				Элемент.ИмяФормы,
				Элемент.ИмяМакета,
				МакетИзКонфигурации.ПолучитьТекст()
			);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура АктуализироватьДанныеВКэше() Экспорт
	Набор = СоздатьНаборЗаписей();
	Набор.Прочитать();
	Набор.Записать(Истина);
КонецПроцедуры

Функция ВсеДанныеВКэшеАктуальны() Экспорт
	Результат = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(Подзапрос.Количество) КАК Количество
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		КОЛИЧЕСТВО(МФМакеты.ИмяФормы) КАК Количество
	               |	ИЗ
	               |		РегистрСведений.МФМакеты КАК МФМакеты
	               |	ГДЕ
	               |		НЕ МФМакеты.ФормаСуществует
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		КОЛИЧЕСТВО(МФМакеты.ИмяФормы)
	               |	ИЗ
	               |		РегистрСведений.МФМакеты КАК МФМакеты
	               |	ГДЕ
	               |		НЕ МФМакеты.МакетСуществует
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		КОЛИЧЕСТВО(МФМакеты.ИмяФормы)
	               |	ИЗ
	               |		РегистрСведений.МФМакеты КАК МФМакеты
	               |	ГДЕ
	               |		НЕ МФМакеты.МакетСовпадает) КАК Подзапрос";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Результат = (ВыборкаДетальныеЗаписи.Количество = 0);
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция Реквизиты(ИменаРеквизитов)
	Результат = Новый Структура;
	
	ДобавитьРеквизит(Результат, "ИмяФормы");
	Реквизиты = СтрРазделить(ИменаРеквизитов, ",");
	Для Каждого Элемент Из Реквизиты Цикл
		ДобавитьРеквизит(Результат, СокрЛП(Элемент));
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

#Область ТекстЗапросаКэшФорм

Функция ТекстЗапросаКэшФорм(Реквизиты, РежимОтбора)
	Результат = "ВЫБРАТЬ
	            |	&РЕКВИЗИТЫ
	            |ИЗ
	            |	РегистрСведений.МФМакеты КАК МФМакеты
	            |ГДЕ
	            |	&УСЛОВИЕ";
	
	ШаблонРеквизита = "МФМакеты.%1 КАК %1";
	
	СтрокиВыборкиРеквизитов = Новый Массив;
	Для Каждого Элемент Из Реквизиты Цикл
		СтрокиВыборкиРеквизитов.Добавить(СтрШаблон(
			ШаблонРеквизита,
			Элемент.Значение
		));
	КонецЦикла;
	
	УсловияВыборки = УсловияВыборки();
	УсловиеВыборки = УсловияВыборки.Получить(РежимОтбора);
	Если УсловиеВыборки = Неопределено Тогда
		УсловиеВыборки = "ИСТИНА";
	КонецЕсли;
	
	Результат = СтрЗаменить(
		Результат, 
		"&РЕКВИЗИТЫ", 
		СтрСоединить(СтрокиВыборкиРеквизитов, ",")
	);
	Результат = СтрЗаменить(
		Результат,
		"&УСЛОВИЕ",
		УсловиеВыборки
	);
	
	Возврат Результат;
КонецФункции

Процедура ДобавитьРеквизит(СписокРеквизитов, ИмяРеквизита)
	СписокРеквизитов.Вставить(ВРег(ИмяРеквизита), ИмяРеквизита);
КонецПроцедуры

Функция УсловияВыборки()
	Результат = Новый Соответствие;
	
	Результат.Вставить(РежимОтбораАктуальныеФормы(), "МФМакеты.ФормаСуществует И МФМакеты.МакетСуществует");
	Результат.Вставить(РежимОтбораФорма(), "МФМакеты.ИмяФормы = &ИмяФормы");
	
	Возврат Результат;
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
