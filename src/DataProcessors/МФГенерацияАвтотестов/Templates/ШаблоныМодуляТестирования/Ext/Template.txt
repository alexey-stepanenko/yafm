$ТекстМодуля
Процедура ИсполняемыеСценарии() Экспорт
&&ИсполняемыеСценарии
КонецПроцедуры

#Область ПодготовкаДанныхДляТестирования

Процедура ПодготовкаДанныхДляТестированияРеквизитов() Экспорт
	МФТестированиеКлиент.ПодготовкаДанныхДляТестированияРеквизитов(
		"&&ИмяФормы",
		ЮТест.КонтекстТестовогоНабора()
	);
КонецПроцедуры

Процедура ПодготовкаДанныхДляТестированияЭлементовФормы() Экспорт
	МФТестированиеКлиент.ПодготовкаДанныхДляТестированияЭлементовФормы(
		"&&ИмяФормы",
		ЮТест.КонтекстТестовогоНабора()
	);
КонецПроцедуры

#КонецОбласти

#Область РеализацияШаговТестирования

Процедура РеквизитСуществует(ИмяРеквизита) Экспорт
	МФТестированиеКлиент.РеквизитСуществует(
		"&&ИмяФормы",
		ИмяРеквизита,
		ЮТест.КонтекстТестовогоНабора()
	);
КонецПроцедуры

Процедура ТипыРеквизитаСодержатЧисло(ИмяРеквизита, ЗнакЧисла, Разрядность, РазрядностьДробнойЧасти) Экспорт
	МФТестированиеКлиент.ТипыРеквизитаСодержатЧисло(
		"&&ИмяФормы",
		ИмяРеквизита,
		ЗнакЧисла,
		Разрядность,
		РазрядностьДробнойЧасти,
		ЮТест.КонтекстТестовогоНабора()
	);
КонецПроцедуры

Процедура ТипыРеквизитаСодержатСтроку(ИмяРеквизита, СтратегияУправленияРесурсами, Длина) Экспорт
	МФТестированиеКлиент.ТипыРеквизитаСодержатСтроку(
		"&&ИмяФормы",
		ИмяРеквизита,
		СтратегияУправленияРесурсами,
		Длина,
		ЮТест.КонтекстТестовогоНабора()
	);
КонецПроцедуры

Процедура ТипыРеквизитаСодержатДату(ИмяРеквизита, ВидДаты) Экспорт
	МФТестированиеКлиент.ТипыРеквизитаСодержатДату(
		"&&ИмяФормы",
		ИмяРеквизита,
		ВидДаты,
		ЮТест.КонтекстТестовогоНабора()
	);
КонецПроцедуры

Процедура ТипыРеквизитаСодержатДвоичныеДанные(ИмяРеквизита, СтратегияУправленияРесурсами, Длина) Экспорт
	ВызватьИсключение "Не реализовано";
КонецПроцедуры

Процедура ТипыРеквизитаСодержатПрочийТип(ИмяРеквизита, ТипСтрокой) Экспорт
	МФТестированиеКлиент.ТипыРеквизитаСодержатПрочийТип(
		"&&ИмяФормы",
		ИмяРеквизита,
		ТипСтрокой,
		ЮТест.КонтекстТестовогоНабора()
	);
КонецПроцедуры

Процедура ЭлементФормыСуществует(ИмяЭлемента) Экспорт
	МФТестированиеКлиент.ЭлементФормыСуществует(
		"&&ИмяФормы",
		ИмяЭлемента,
		ЮТест.КонтекстТестовогоНабора()
	);
КонецПроцедуры

Процедура ТипаЭлементаФормыРавен(ИмяЭлемента, ПроверяемыйТип) Экспорт
	МФТестированиеКлиент.ТипаЭлементаФормыРавен(
		"&&ИмяФормы",
		ИмяЭлемента,
		ПроверяемыйТип,
		ЮТест.КонтекстТестовогоНабора()
	);
КонецПроцедуры

Процедура ИмяРодителяЭлементаФормыРавно(ИмяЭлемента, ИмяРодителя) Экспорт
	МФТестированиеКлиент.ИмяРодителяЭлементаФормыРавно(
		"&&ИмяФормы",
		ИмяЭлемента,
		ИмяРодителя,
		ЮТест.КонтекстТестовогоНабора()
	);
КонецПроцедуры

//Процедура СвойствоЭлементаРавно(ИмяЭлемента, ИмяСвойства, ПроверяемоеЗначение) Экспорт
//	МФТестированиеКлиент.СвойствоЭлементаРавно(
//		"&&ИмяФормы",
//		ИмяЭлемента,
//		ИмяСвойства,
//		ПроверяемоеЗначение,
//		ЮТест.КонтекстТестовогоНабора()
//	);
//КонецПроцедуры

#КонецОбласти

$ИсполняемыеСценарии
	ЮТТесты.ДобавитьТестовыйНабор(&&ИмяТестовогоНабора)
		.Перед("&&ИмяПроцедурыПеред")
&&Тесты
	;

$ИмяТестовогоНабораРеквизиты
"Тестирование реквизитов формы ""&&ИмяФормы"""

$ИмяТестовогоНабораЭлементыФормы
"Тестирование элементов формы ""&&ИмяФормы"""

$Тест
		.ДобавитьТест("&&ИмяПроцедуры", "&&ЗаголовокТеста").СПараметрами(
&&ПараметрыТеста
		)

$ПараметрТеста
			&&ПараметрТеста
