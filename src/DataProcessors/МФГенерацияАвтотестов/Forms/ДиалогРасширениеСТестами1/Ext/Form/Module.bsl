//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2025 Alexey A. Stepanenko 
//    * alexey.stepanenko@gmail.com
//    * TG: @AlexeyStepanenko
//    * https://github.com/alexey-stepanenko
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	МФЦветРазличающихсяМакетов = ЦветаСтиля.МФЦветРазличающихсяМакетов;
	Элементы.ФормироватьМодулиСТестами.Доступность = ДоступностьФормироватьМодулиСТестами;
	
	Если Параметры.Свойство("СвойстваГенерацииРасширения") Тогда
		ИменаПараметров = Новый Массив;
		Для Каждого Параметр Из Параметры.СвойстваГенерацииРасширения Цикл
			ИменаПараметров.Добавить(Параметр.Ключ);
			ЭтаФорма[Параметр.Ключ] = Параметр.Значение;
		КонецЦикла;
		ИменаСвойствГенерацииРасширения = СтрСоединить(ИменаПараметров, ",");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВерсиюРасширения();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Асинх Процедура ПолныйПутьКФайлуРасширенияНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Фильтр = НСтр("ru='Файлы расширений (*.cfe)|*.cfe|Все файлы (*.*)|*.*'");
	Диалог.ПолноеИмяФайла = ПолныйПутьКФайлуРасширения;
	РезультатВыбора = Ждать Диалог.ВыбратьАсинх();
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПолныйПутьКФайлуРасширения = Диалог.ПолноеИмяФайла;
	Ждать ПроверитьСуществованиеФайлаРасширения();
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПолныйПутьКФайлуРасширенияПриИзменении(Элемент)
	Ждать ПроверитьСуществованиеФайлаРасширения();
КонецПроцедуры

&НаКлиенте
Асинх Процедура РежимРаботыПриИзменении(Элемент)
	Ждать ПроверитьСуществованиеФайлаРасширения();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СгенерироватьРасширение(Команда)
	ЕстьОшибки = Не ПроверитьЗаполнение();
	Если Не (ФормироватьМодулиЯдраТестирования Или ФормироватьМодулиСТестами) Тогда
		СообщениеПользователю = Новый СообщениеПользователю();
		СообщениеПользователю.Текст = НСтр("ru='Необходимо выбрать хотя бы один вид модулей'");
		СообщениеПользователю.Поле = "ФормироватьМодулиЯдраТестирования";
		СообщениеПользователю.Сообщить();
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Если ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыГенерацииРасширения = Новый Структура;
	Для Каждого ИмяПараметра Из СтрРазделить(ИменаСвойствГенерацииРасширения, ",") Цикл
		ПараметрыГенерацииРасширения.Вставить(ИмяПараметра, ЭтаФорма[ИмяПараметра]);
	КонецЦикла;
	ПараметрыГенерацииРасширения.Удалить("ТекущаяВерсияРасширения");
	ПараметрыГенерацииРасширения.Вставить("ВерсияРасширения", ВерсияРасширения);
	
	Закрыть(ПараметрыГенерацииРасширения);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВерсияРасширенияПриИзменении(Элемент)
	ПроверитьВерсиюРасширения();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Асинх Процедура ПроверитьФайлРасширения()
	Если ПустаяСтрока(ПолныйПутьКФайлуРасширения) Тогда
		Возврат;
	КонецЕсли;
	ФайлРасширения = Новый Файл(ПолныйПутьКФайлуРасширения);
	ФайлРасширенияСуществует = Ждать ФайлРасширения.СуществуетАсинх();
	Если (РежимРаботыГенерацииРасширения = 1) И Не ФайлРасширенияСуществует Тогда
		РежимРаботыГенерацииРасширения = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Функция ПроверитьСуществованиеФайлаРасширения()
	Если ПустаяСтрока(ПолныйПутьКФайлуРасширения) Тогда
		Возврат Неопределено;
	КонецЕсли;
	ФайлРасширения = Новый Файл(ПолныйПутьКФайлуРасширения);
	ФайлСуществует = Ждать ФайлРасширения.СуществуетАсинх();
	Если ФайлСуществует Тогда
		// TODO 2025-06-27: Выдать вопрос о загрузке параметров из расширения и дальнейшей обработки
		//ДвоичныеДанные = Новый ДвоичныеДанные(ПолныйПутьКФайлуРасширения);
		//Попытка
		//	СвойстваРасширения = СвойстваРасширения(ДвоичныеДанные);
		//	ИмяРасширения = СвойстваРасширения.Имя;
		//	ТекущаяВерсияРасширения = СвойстваРасширения.Версия;
		//	ВерсияРасширения = СвойстваРасширения.Версия;
		//Исключение
		//	РежимРаботыГенерацииРасширения = 0;
		//	ВызватьИсключение;
		//КонецПопытки;
	Иначе
		РежимРаботыГенерацииРасширения = 0;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция СвойстваРасширения(ДвоичныеДанные)
	Возврат Обработки.МФГенерацияАвтотестов.СвойстваРасширения(ДвоичныеДанные);
КонецФункции

&НаКлиенте
Процедура УстановитьВерсиюРасширения()
	Если
		ПустаяСтрока(ТекущаяВерсияРасширения)
		Или ТекущаяВерсияРасширения = "0"
	Тогда
		ВерсияРасширения = "1";
	КонецЕсли;
	ПроверитьВерсиюРасширения();
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВерсиюРасширения()
	Элементы.ГруппаВерсияРасширения.ЦветФона = Новый Цвет;
	Элементы.ДекорацияВерсияРасширения.Видимость = Ложь;
	Если ТекущаяВерсияРасширения = ВерсияРасширения Тогда
		Элементы.ГруппаВерсияРасширения.ЦветФона = МФЦветРазличающихсяМакетов;
		Элементы.ДекорацияВерсияРасширения.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры


#КонецОбласти
