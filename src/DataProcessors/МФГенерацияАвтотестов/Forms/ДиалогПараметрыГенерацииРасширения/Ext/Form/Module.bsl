//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2025 Alexey A. Stepanenko 
//    * alexey.stepanenko@gmail.com
//    * TG: @AlexeyStepanenko
//    * https://github.com/alexey-stepanenko
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИменаПараметровГенерацииРасширения = Обработки.МФГенерацияАвтотестов.ИменаПараметровГенерацииРасширения();
	ИменаПараметров = СтрРазделить(ИменаПараметровГенерацииРасширения, ",");
	РеквизитыФормы = Новый Массив;
	Для Каждого Реквизит Из ЭтаФорма.ПолучитьРеквизиты() Цикл
		РеквизитыФормы.Добавить(Реквизит.Имя);
	КонецЦикла;
	Количество = ИменаПараметров.Количество();
	Для Сч = 1 По Количество Цикл
		Индекс = Количество - Сч;
		Если РеквизитыФормы.Найти(ИменаПараметров[Индекс]) = Неопределено Тогда
			ИменаПараметров.Удалить(Индекс);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ИмяПараметра Из ИменаПараметров Цикл
		ЗначениеПоля = Неопределено;
		Если Параметры.Свойство(ИмяПараметра, ЗначениеПоля) Тогда
			ЭтаФорма[ИмяПараметра] = ЗначениеПоля;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Асинх Процедура ПутьКФайлуЗапуска1СНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "Все файлы (*.*)|*.*";
	Диалог.ПолноеИмяФайла = ПутьКФайлуЗапуска1С;
	
	РезультатВыбора = Ждать Диалог.ВыбратьАсинх();
	Если РезультатВыбора <> Неопределено Тогда
		ПутьКФайлуЗапуска1С = РезультатВыбора[0];
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидИнформационнойБазыПриИзменении(Элемент)
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьПараметры(Команда)
	ИменаПараметров = СтрРазделить(ИменаПараметровГенерацииРасширения, ",");
	РезультатЗакрытияФормы = Новый Структура;
	Для Каждого ИмяПараметра Из ИменаПараметров Цикл
		РезультатЗакрытияФормы.Вставить(ИмяПараметра, ЭтаФорма[ИмяПараметра]);
	КонецЦикла;
	Закрыть(РезультатЗакрытияФормы);
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПроверитьСоединение(Команда)
	Если ПустаяСтрока(ПутьКФайлуЗапуска1С) Тогда
		Ждать ПредупреждениеАсинх(
			НСтр("ru='Не указан путь к файлу запуска платформы ""1С:Предприятия 8""'"),
			30
		);
		
		Возврат;
	КонецЕсли;
	Файл = Новый Файл(ПутьКФайлуЗапуска1С);
	ФайлСуществует = Ждать файл.СуществуетАсинх();
	Если Не ФайлСуществует Тогда
		Ждать ПредупреждениеАсинх(
			СтрШаблон(НСтр("ru='Файл по пути ""%1"" не обнаружен'"), ПутьКФайлуЗапуска1С),
			30
		);
		
		Возврат;
	КонецЕсли;
	
	ИменаПараметров = СтрРазделить(ИменаПараметровГенерацииРасширения, ",");
	
	ГенераторРасширения = ПолучитьФорму("Обработка.МФГенерацияАвтотестов.Форма.ГенераторРасширения");
	ПараметрыИнициализации = ГенераторРасширения.НовыйПараметрыИнициализации();
	Для Каждого ПараметрИнициализации Из ПараметрыИнициализации Цикл
		Если ИменаПараметров.Найти(ПараметрИнициализации.Ключ) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ПараметрыИнициализации[ПараметрИнициализации.Ключ] = ЭтаФорма[ПараметрИнициализации.Ключ];
	КонецЦикла;
	ГенераторРасширения.Инициализировать(ПараметрыИнициализации);
	Ждать ГенераторРасширения.ПроверитьВозможностьИспользования();
	ПоказатьПредупреждение(
		,
		НСтр("ru='Подключение успешно!'"),
		30
	);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимостьДоступностьЭлементов()
	Элементы.СтрокаСоединенияКСуществующейИБ.Видимость = (ВидИнформационнойБазы = 1);
	Элементы.ПользовательСуществующейИБ.Видимость = (ВидИнформационнойБазы = 1);
	Элементы.ПарольПользователяСуществующейИБ.Видимость = (ВидИнформационнойБазы = 1);
КонецПроцедуры

#КонецОбласти
