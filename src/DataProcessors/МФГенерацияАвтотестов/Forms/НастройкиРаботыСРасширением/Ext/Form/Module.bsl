//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2025 Alexey A. Stepanenko 
//    * alexey.stepanenko@gmail.com
//    * TG: @AlexeyStepanenko
//    * https://github.com/alexey-stepanenko
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИменаПараметровДляРаботыСРасширением = Обработки.МФГенерацияАвтотестов.ИменаПараметровДляРаботыСРасширением();
	ИменаПараметров = СтрРазделить(ИменаПараметровДляРаботыСРасширением, ",");
	
	Для Каждого ИмяПараметра Из ИменаПараметров Цикл
		ЗначениеПоля = Неопределено;
		Если Параметры.Свойство(ИмяПараметра, ЗначениеПоля) Тогда
			ЭтаФорма[ИмяПараметра] = ЗначениеПоля;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Асинх Процедура ПутьКФайлуЗапуска1СНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "Все файлы (*.*)|*.*";
	Диалог.ПолноеИмяФайла = ПутьКФайлуЗапуска1С;
	
	РезультатВыбора = Ждать Диалог.ВыбратьАсинх();
	Если РезультатВыбора <> Неопределено Тогда
		ПутьКФайлуЗапуска1С = РезультатВыбора[0];
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидИнформационнойБазыПриИзменении(Элемент)
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьПараметры(Команда)
	ИменаПараметров = СтрРазделить(ИменаПараметровДляРаботыСРасширением, ",");
	РезультатЗакрытияФормы = Новый Структура;
	Для Каждого ИмяПараметра Из ИменаПараметров Цикл
		РезультатЗакрытияФормы.Вставить(ИмяПараметра, ЭтаФорма[ИмяПараметра]);
	КонецЦикла;
	Закрыть(РезультатЗакрытияФормы);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСоединение(Команда)
	//ИменаПараметровДляРаботыСРасширением = Обработки.МФГенерацияАвтотестов.ИменаПараметровДляРаботыСРасширением();
	ИменаПараметров = СтрРазделить(ИменаПараметровДляРаботыСРасширением, ",");
	
	ВременнаяИБ = ПолучитьФорму("Обработка.МФГенерацияАвтотестов.Форма.ВременнаяИнформационнаяБаза");
	ПараметрыИнициализации = ВременнаяИБ.НовыйПараметрыИнициализации();
	//ПараметрыИнициализации.
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимостьДоступностьЭлементов()
	Элементы.СтрокаСоединенияКСуществующейИБ.Видимость = (ВидИнформационнойБазы = 1);
	Элементы.ПользовательСуществующейИБ.Видимость = (ВидИнформационнойБазы = 1);
	Элементы.ПарольПользователяСуществующейИБ.Видимость = (ВидИнформационнойБазы = 1);
КонецПроцедуры

#КонецОбласти
