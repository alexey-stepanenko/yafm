//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2025 Alexey A. Stepanenko 
//    * alexey.stepanenko@gmail.com
//    * TG: @AlexeyStepanenko
//    * https://github.com/alexey-stepanenko
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДеревоФорм = РеквизитФормыВЗначение("ДеревоФормКонфигурации");
	МФИнструментыРазработчика.СформироватьДеревоФорм(ДеревоФорм);
	ЗначениеВРеквизитФормы(ДеревоФорм, "ДеревоФормКонфигурации");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РежимГенерацииПриИзменении(Элемент)
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ТестируемыеФормы

&НаКлиенте
Процедура ТестируемыеФормыИмяФормыНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("ДеревоФорм", ДеревоФормКонфигурации);
	
	// BSLLS:NestedFunctionInParameters-off
	ОткрытьФорму(
		"ОбщаяФорма.МФВыборФормы",
		ПараметрыПодбора, 
		ЭтаФорма, 
		ЭтаФорма, 
		, 
		, 
		Новый ОписаниеОповещения(
			"ПослеВыбораТестируемойФормы",
			ЭтаФорма,
			Элементы.ТестируемыеФормы.ТекущиеДанные
		), 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	// BSLLS:NestedFunctionInParameters-on
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ГенерироватьТекстыМодулей(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ГенерироватьРасширение(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимостьДоступностьЭлементов()
	Элементы.ГруппаГенерацияМодулей.Видимость = (РежимГенерации = 0);
	Элементы.ГенерироватьТекстыМодулей.КнопкаПоУмолчанию = (РежимГенерации = 0);
	
	Элементы.ГруппаГенерацияРасширения.Видимость = (РежимГенерации = 1);
	Элементы.ГенерироватьРасширение.КнопкаПоУмолчанию = (РежимГенерации = 1);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораТестируемойФормы(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТестируемаяФорма = РезультатЗакрытия.ВыбраннаяФорма;
	ДеревоФормКонфигурации.ПолучитьЭлементы().Очистить();
	МФИнструментыРазработчикаКлиент.ЗаполнитьВетки(
		ДеревоФормКонфигурации, 
		РезультатЗакрытия.ДеревоФормКонфигурации
	);
	ДополнительныеПараметры.ИмяФормы = ТестируемаяФорма;
КонецПроцедуры

&НаКлиенте
Процедура ТестируемыеФормыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
