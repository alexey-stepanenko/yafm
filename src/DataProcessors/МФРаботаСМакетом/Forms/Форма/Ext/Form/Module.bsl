//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2025 Alexey A. Stepanenko 
//    * alexey.stepanenko@gmail.com
//    * TG: @AlexeyStepanenko
//    * https://github.com/alexey-stepanenko
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.НадписьПервоеОткрытиеФормы.Заголовок = НСтр(
		"ru='Имя макета и сам макет загружен из кэша. Возможно, что данные в кэше неактуальны, рекомендуется открыть 
		|и закрыть форму для обновления данных в кэше и продолжить работу с макетом.'"
	);
	Версия = МФСлужебный.Версия();
	
	ДеревоФорм = РеквизитФормыВЗначение("ДеревоФормКонфигурации");
	МФИнструментыРазработчика.СформироватьДеревоФорм(ДеревоФорм);
	ЗначениеВРеквизитФормы(ДеревоФорм, "ДеревоФормКонфигурации");
	
	СформироватьШаблоны();
	АдресКэшаФорм = ПоместитьВоВременноеХранилище(Новый Соответствие, УникальныйИдентификатор);
	СформироватьКэшФормНаСервере();
	РедактируемаяФормаОткрывалась = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПолноеИмяФормыПриИзменении(Элемент)
	УстановитьМакетОписанияМодификацииПоФорме();
	РедактируемаяФормаОткрывалась = Ложь;
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ПолноеИмяФормыНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("ДеревоФорм", ДеревоФормКонфигурации);
	ПараметрыПодбора.Вставить("ВыбраннаяФорма", ИмяРедактируемойФормы);
	ПараметрыПодбора.Вставить("ВыбранныеФормы", Новый Массив);
	
	// BSLLS:NestedFunctionInParameters-off
	ОткрытьФорму(
		//"Обработка.МФРаботаСМакетом.Форма.ФормаПодбора", 
		"ОбщаяФорма.МФВыборФормы",
		ПараметрыПодбора, 
		ЭтаФорма, 
		ЭтаФорма, 
		, 
		, 
		Новый ОписаниеОповещения("ПослеВыбораФормыДляМодификации", ЭтаФорма), 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	// BSLLS:NestedFunctionInParameters-on
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьМодифицируемуюФорму(Команда)
	РедактируемаяФормаОткрывалась = Истина;
	Если Не ПустаяСтрока(МакетОписанияМодификаций) Тогда
		ОбновитьМакетОписанияМодификаций(
			ИмяРедактируемойФормы,
			ИмяМакета,
			МакетОписанияМодификаций
		);
	КонецЕсли;
	ОткрытьФорму(ИмяРедактируемойФормы);
	ПодключитьОбработчикОжидания("СформироватьКэшФорм", 1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура НовыйМакет(Команда)
	Если Не ПустаяСтрока(МакетОписанияМодификаций) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаОбОчисткеМакета", ЭтаФорма);
		ПоказатьВопрос(
			ОписаниеОповещения,
			НСтр("ru='Текущий макет не пустой. Очистить?'"),
			РежимДиалогаВопрос.ДаНет,
			30,
			КодВозвратаДиалога.Нет,
			НСтр("ru='Очистка макета'"),
			КодВозвратаДиалога.Нет
		);
	Иначе
		ПродолжитьСозданиеНовогоМакета();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВставитьШаблон(Команда)
	Если Не Шаблоны.Свойство(Команда.Имя) Тогда
		Возврат;
	КонецЕсли;
	
	Шаблон = СтрЗаменить(
		Шаблоны[Команда.Имя],
		Символы.Таб,
		СимволРазделитель
	);
	
	МакетОписанияМодификаций = СокрЛП(
		МакетОписанияМодификаций
		+ Символы.ПС
		+ Шаблон
		+ Символы.ПС
	);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СформироватьКэшФорм()
	СформироватьКэшФормНаСервере();
	УстановитьМакетОписанияМодификацииПоФорме();
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

&НаСервере
Процедура СформироватьКэшФормНаСервере()
	КэшФорм = РегистрыСведений.МФМакеты.КэшФорм(
		"ИмяМакета",
		РегистрыСведений.МФМакеты.РежимОтбораАктуальныеФормы()
	);
	ПоместитьВоВременноеХранилище(КэшФорм, АдресКэшаФорм);
	Элементы.ИмяРедактируемойФормы.СписокВыбора.Очистить();
	Для Каждого Элемент Из КэшФорм Цикл
		Элементы.ИмяРедактируемойФормы.СписокВыбора.Добавить(Элемент.Ключ);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступностьЭлементов()
	Элементы.ОткрытьМодифицируемуюФорму.Доступность = (ИмяРедактируемойФормы <> "");
	Для Каждого ЭлементФормы Из Элементы.ГруппаШаблоны.ПодчиненныеЭлементы Цикл
		ЭлементФормы.Доступность = Булево(КодСимволаРазделителя);
	КонецЦикла;
	
	Элементы.НадписьНетВКэше.Видимость = Ложь;
	Элементы.НадписьПервоеОткрытиеФормы.Видимость = Ложь;
	Элементы.МакетОписанияМодификации.Видимость = Ложь;
	Элементы.ИмяМакета.Видимость = Ложь;
	
	Если Не ПустаяСтрока(ИмяРедактируемойФормы) Тогда
		Если ПустаяСтрока(ИмяМакета) Тогда
			Элементы.НадписьНетВКэше.Заголовок = СтрШаблон(
				НСтр(
					"ru='Отсутствуют данные в кэше для формы ""%1"". Нажмите на кнопку ""%2"", далее закройте "
					+ "открывшуюся форму и вернитесь сюда.'"
				),
				ИмяРедактируемойФормы,
				"Открыть форму"
			);
			Элементы.НадписьНетВКэше.Видимость = Истина;
		Иначе
			Элементы.ИмяМакета.Видимость = Истина;
			Элементы.НадписьПервоеОткрытиеФормы.Видимость = Не РедактируемаяФормаОткрывалась;
			Элементы.МакетОписанияМодификации.Видимость = Истина;
		КонецЕсли;
		//Иначе
		//	Элементы.НапоминаниеПервоеОткрытиеФормы.Заголовок = СтрШаблон(
		//		НСтр(
		//			"ru='Не забудьте после окончания работы с макетом модификациии формы ""%1"" перенести все изменения "
		//			+ "в макет ""%2"".'"
		//		),
		//		ИмяРедактируемойФормы,
		//		ИмяМакета
		//	);
		//Элементы.НапоминаниеПервоеОткрытиеФормы.Видимость = Не РедактируемаяФормаОткрывалась;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФормыДляМодификации(РезультатЗакрытия, ДополнительныеПараметры) Экспорт 
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРедактируемойФормы = РезультатЗакрытия.ВыбраннаяФорма;
	УстановитьМакетОписанияМодификацииПоФорме();
	РедактируемаяФормаОткрывалась = Ложь;
	СписокВыбора = Элементы.ИмяРедактируемойФормы.СписокВыбора;
	Если СписокВыбора.НайтиПоЗначению(ИмяРедактируемойФормы) = Неопределено Тогда
		СписокВыбора.Добавить(ИмяРедактируемойФормы);
		СписокВыбора.СортироватьПоЗначению();
	КонецЕсли;
	
	ДеревоФормКонфигурации.ПолучитьЭлементы().Очистить();
	МФИнструментыРазработчикаКлиентСервер.ЗаполнитьВетки(
		ДеревоФормКонфигурации, 
		РезультатЗакрытия.ДеревоФормКонфигурации
	);
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьМакетОписанияМодификаций(ИмяФормы, ИмяМакета, ТекстМакета)
	РегистрыСведений.МФМакеты.ОбновитьМакетОписанияМодификаций(
		ИмяФормы,
		ИмяМакета,
		ТекстМакета
	);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаОбОчисткеМакета(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПродолжитьСозданиеНовогоМакета();
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьСозданиеНовогоМакета()
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияФормыСозданияНовогоМакета", ЭтаФорма);
	ОткрытьФорму(
		"Обработка.МФРаботаСМакетом.Форма.СозданиеНовогоМакета",
		, , , , ,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормыСозданияНовогоМакета(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	КодСимволаРазделителя = РезультатЗакрытия.КодСимволаРазделителя;
	СимволРазделитель = РезультатЗакрытия.СимволРазделитель;
	МакетОписанияМодификаций = ЗаголовокМакета();
	УстановитьВидимостьДоступностьЭлементов();
КонецПроцедуры

&НаКлиенте
Функция ЗаголовокМакета()
	Результат = СтрШаблон(
		"МОДИФИКАЦИЯФОРМ %1 %2",
		Версия,
		Формат(КодСимволаРазделителя, "ЧГ=")
	) + Символы.ПС;
	
	Возврат Результат;
КонецФункции

#Область Шаблоны

&НаСервере
Процедура СформироватьШаблоны()
	Шаблоны = Новый Структура;
	Макет = Обработки.МФРаботаСМакетом.ПолучитьМакет("Шаблоны");
	ИмяШаблона = "";
	СоставШаблона = Новый Массив;
	Для Сч = 1 По Макет.КоличествоСтрок() Цикл
		СтрокаШаблона = Макет.ПолучитьСтроку(Сч);
		Если Лев(СтрокаШаблона, 1) = "$" Тогда
			ЗапомнитьШаблон(ИмяШаблона, СоставШаблона);
			ИмяШаблона = Прав(СтрокаШаблона, СтрДлина(СтрокаШаблона) - 1);
			СоставШаблона.Очистить();
		ИначеЕсли
			Не ПустаяСтрока(СтрокаШаблона)
			И Не ПустаяСтрока(ИмяШаблона)
		Тогда
			СоставШаблона.Добавить(СтрокаШаблона);
		Иначе
			// Пустой блок
		КонецЕсли;
	КонецЦикла;
	Если СоставШаблона.Количество() > 0 Тогда
		ЗапомнитьШаблон(ИмяШаблона, СоставШаблона);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗапомнитьШаблон(ИмяШаблона, СоставШаблона)
	Если
		ПустаяСтрока(ИмяШаблона)
		Или СоставШаблона.Количество() = 0
	Тогда
		Возврат;
	КонецЕсли;
	
	ТекстШаблона = СтрСоединить(СоставШаблона, Символы.ПС);
	Шаблоны.Вставить(ИмяШаблона, ТекстШаблона);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура УстановитьМакетОписанияМодификацииПоФорме()
	КэшФорм = ПолучитьИзВременногоХранилища(АдресКэшаФорм);
	СвойстваФормыИзКэша = КэшФорм.Получить(ИмяРедактируемойФормы);
	Если СвойстваФормыИзКэша = Неопределено Тогда
		ИмяМакета = "";
		МакетОписанияМодификаций = "";
	Иначе
		ИмяМакета = СвойстваФормыИзКэша.ИмяМакета;
		МакетОписанияМодификаций = МакетОписанияМодификаций(ИмяРедактируемойФормы, ИмяМакета);
	КонецЕсли;
	
	
	
	//ИмяМакетаИзКэша = КэшФорм.Получить(ИмяРедактируемойФормы);
	//Если ИмяМакетаИзКэша = Неопределено Тогда
	//	ИмяМакета = "";
	//	МакетОписанияМодификаций = "";
	//Иначе
	//	ИмяМакета = ИмяМакетаИзКэша;
	//	МакетОписанияМодификаций = МакетОписанияМодификаций(ИмяРедактируемойФормы, ИмяМакета);
	//КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция МакетОписанияМодификаций(ИмяФормы, ИмяМакетаОписанияМодификаций)
	Результат = "";
	
	Макет = РегистрыСведений.МФМакеты.МакетОписанияМодификаций(ИмяФормы, ИмяМакетаОписанияМодификаций);
	Результат = Макет.ПолучитьТекст();
	
	Возврат Результат;
КонецФункции

#КонецОбласти
